// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductCategory {
  MOBILE
  LAPTOP
  WATCH
  OTHER
}

model Product {
  id String @id @default(uuid())
  name String
  category ProductCategory
  description String?
  price Float? @default(0.0) 
  quantity Int? @default(0)
  images Image[]
  cart CartItem[]
}

model Image {
  id String @id @default(uuid())
  image String
  Product Product? @relation(fields: [productId], references: [id])
  productId String?
}

// model CartItem{
//   id Int @id @default(autoincrement())
//   userId String
//   productId String
//   quantity Int
//   product Product @relation(fields: [productId],references: [id])
// }

model Guest {
  id         String   @id @default(uuid())
  ipAddress  String?
  userAgent  String?
  createdAt  DateTime @default(now())
  cart       Cart?
}

model Cart {
  id        String     @id @default(uuid())
  userId    String?
  guestId   String?    @unique
  guest     Guest?     @relation(fields: [guestId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     CartItem[]
}

model CartItem {
  id        Int        @id @default(autoincrement())
  cartId    String
  productId String
  quantity  Int        @default(1)

  cart      Cart       @relation(fields: [cartId], references: [id])
  product   Product    @relation(fields: [productId], references: [id])
}